diff --git a/core/modules/book/src/Plugin/Validation/Constraint/BookOutlineConstraintValidator.php b/core/modules/book/src/Plugin/Validation/Constraint/BookOutlineConstraintValidator.php
index ca8114dad4..0fd07c7a08 100644
--- a/core/modules/book/src/Plugin/Validation/Constraint/BookOutlineConstraintValidator.php
+++ b/core/modules/book/src/Plugin/Validation/Constraint/BookOutlineConstraintValidator.php
@@ -43,7 +43,7 @@ public static function create(ContainerInterface $container) {
    * {@inheritdoc}
    */
   public function validate($entity, Constraint $constraint) {
-    if (isset($entity) && !$entity->isNew() && !$entity->isDefaultRevision()) {
+    if (!empty($entity->book) && !$entity->isNew() && !$entity->isDefaultRevision()) {
       /** @var \Drupal\Core\Entity\ContentEntityInterface $original */
       $original = $this->bookManager->loadBookLink($entity->id(), FALSE) ?: [
         'bid' => 0,
@@ -53,23 +53,33 @@ public function validate($entity, Constraint $constraint) {
         $original['pid'] = -1;
       }
 
-      if ($entity->book['bid'] != $original['bid']) {
-        $this->context->buildViolation($constraint->message)
-          ->atPath('book.bid')
-          ->setInvalidValue($entity)
-          ->addViolation();
-      }
-      if ($entity->book['pid'] != $original['pid']) {
-        $this->context->buildViolation($constraint->message)
-          ->atPath('book.pid')
-          ->setInvalidValue($entity)
-          ->addViolation();
-      }
-      if ($entity->book['weight'] != $original['weight']) {
-        $this->context->buildViolation($constraint->message)
-          ->atPath('book.weight')
-          ->setInvalidValue($entity)
-          ->addViolation();
+      // Validate the book structure when the user has access to manage book
+      // outlines. When the user can manage book outlines, the book variable
+      // will be populated even if the node is not part of the book.
+      // If the user cannot manage book outlines, the book variable will be
+      // empty and we can safely ignore the constraints as the outline cannot
+      // be changed by this user.
+      if (!empty($entity->book)) {
+        if ($entity->book['bid'] != $original['bid']) {
+          $this->context->buildViolation($constraint->message)
+            ->atPath('book.bid')
+            ->setInvalidValue($entity)
+            ->addViolation();
+        }
+        // We add this to remove the constraint when the node is not a true
+        // book.
+        if ($original['pid'] !== -1 && $entity->book['pid'] != $original['pid']) {
+          $this->context->buildViolation($constraint->message)
+            ->atPath('book.pid')
+            ->setInvalidValue($entity)
+            ->addViolation();
+        }
+        if ($entity->book['weight'] != $original['weight']) {
+          $this->context->buildViolation($constraint->message)
+            ->atPath('book.weight')
+            ->setInvalidValue($entity)
+            ->addViolation();
+        }
       }
     }
   }
