<?php

/**
 * @file
 * Adds tokens about the platform languages.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function token_language_help($route_name, RouteMatchInterface $route_match) {
  if ($route_name === 'help.page.token_language') {
    $output = '';
    $output .= '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('The token modules provides only tokens about the language a node is in.') . '</p>';
    $output .= '<p>' . t('There are use cases where, for example a field help text, needs to link to another page prefixed by the current interface language code.') . '</p>';
    $output .= '<h6>' . t('This module adds the missing tokens about the interface language:') . '</h6>';
    $output .= '<ul><li>' . t('Current language name.') . '</li>' . '<li>' . t('Current language code.') . '</li></ul>';
    return $output;
  }
}

/**
 * Implements hook_token_info().
 */
function token_language_token_info() {
  // Current language tokens.
  $currentLanguageType = [
    'name' => t('Current language'),
    'description' => t('Tokens related to the current language.'),
  ];
  $currentLanguageTokens = [];
  $currentLanguageTokens['code'] = [
    'name' => t('Language code'),
    'description' => t('The current language code.'),
  ];
  $currentLanguageTokens['uppercase_code'] = [
    'name' => t('Language code (uppercase)'),
    'description' => t('The current language code in capital letters.'),
  ];
  $currentLanguageTokens['name'] = [
    'name' => t('Language name'),
    'description' => t('The current language name.'),
  ];

  return [
    'types' => [
      'current-language' => $currentLanguageType,
    ],
    'tokens' => [
      'current-language' => $currentLanguageTokens,
    ],
  ];
}

/**
 * Implements hook_tokens().
 */
function token_language_tokens($type, array $tokens, array $data = [], array $options = []) {
  $replacements = [];

  if ($type === 'current-language') {
    $replacements = _token_language_tokens_current_language($tokens, $data, $options);
  }

  return $replacements;
}

/**
 * Current language tokens.
 *
 * @param array $tokens
 *   Tokens to replace.
 * @param array $data
 *   Token related data.
 * @param array $options
 *   Token related options.
 *
 * @return array
 *   Replacements.
 */
function _token_language_tokens_current_language(array $tokens, array $data = [], array $options = []) {
  $replacements = [];

  $currentLanguage = \Drupal::languageManager()->getCurrentLanguage();
  foreach ($tokens as $name => $original) {
    if ($name === 'code') {
      $replacements[$original] = $currentLanguage->getId();
    }
    if ($name === 'uppercase_code') {
      $replacements[$original] = strtoupper($currentLanguage->getId());
    }
    if ($name === 'name') {
      $replacements[$original] = $currentLanguage->getName();
    }
  }

  return $replacements;
}
