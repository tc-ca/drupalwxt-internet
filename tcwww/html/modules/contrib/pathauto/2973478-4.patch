diff --git a/pathauto.module b/pathauto.module
index 67b3359..707ff01 100644
--- a/pathauto.module
+++ b/pathauto.module
@@ -24,6 +24,7 @@ use Drupal\Core\Entity\EntityTypeInterface;
 use Drupal\Core\Field\BaseFieldDefinition;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\Core\TypedData\TranslatableInterface;
 use Drupal\Core\Url;
 use Drupal\pathauto\PathautoFieldItemList;
 use Drupal\pathauto\PathautoItem;
@@ -88,14 +89,30 @@ function pathauto_help($route_name, RouteMatchInterface $route_match) {
  * Implements hook_entity_insert().
  */
 function pathauto_entity_insert(EntityInterface $entity) {
-  \Drupal::service('pathauto.generator')->updateEntityAlias($entity, 'insert');
+  if ($entity instanceof TranslatableInterface) {
+    foreach ($entity->getTranslationLanguages() as $langcode => $language) {
+      $translation = $entity->getTranslation($langcode);
+      \Drupal::service('pathauto.generator')->updateEntityAlias($translation, 'insert');
+    }
+  }
+  else {
+    \Drupal::service('pathauto.generator')->updateEntityAlias($entity, 'insert');
+  }
 }
 
 /**
  * Implements hook_entity_update().
  */
 function pathauto_entity_update(EntityInterface $entity) {
-  \Drupal::service('pathauto.generator')->updateEntityAlias($entity, 'update');
+  if ($entity instanceof TranslatableInterface) {
+    foreach ($entity->getTranslationLanguages() as $langcode => $language) {
+      $translation = $entity->getTranslation($langcode);
+      \Drupal::service('pathauto.generator')->updateEntityAlias($translation, 'update');
+    }
+  }
+  else {
+    \Drupal::service('pathauto.generator')->updateEntityAlias($entity, 'update');
+  }
 }
 
 /**
diff --git a/tests/src/Kernel/PathautoKernelTest.php b/tests/src/Kernel/PathautoKernelTest.php
index 1d5db68..a79495c 100644
--- a/tests/src/Kernel/PathautoKernelTest.php
+++ b/tests/src/Kernel/PathautoKernelTest.php
@@ -184,6 +184,25 @@ class PathautoKernelTest extends KernelTestBase {
     $this->assertEntityAlias($node3, '/content/sample-page', 'fr');
   }
 
+  /**
+   * Test alias generation when translations are affected.
+   */
+  public function testAliasInTranslations() {
+    $node = Node::create([
+      'title' => 'English title',
+      'type' => 'page',
+      'langcode' => 'en',
+    ]);
+    $node->addTranslation('fr', [
+      'title' => 'French title',
+      'type' => 'page',
+      'langcode' => 'fr',
+    ]);
+    $node->save();
+    $this->assertEntityAlias($node, '/content/english-title', 'en');
+    $this->assertEntityAlias($node, '/content/french-title', 'fr');
+  }
+
   /**
    * Test pathauto_cleanstring().
    */
