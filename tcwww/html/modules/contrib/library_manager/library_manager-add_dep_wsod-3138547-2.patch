diff --git a/src/Form/LibraryDefinitionForm.php b/src/Form/LibraryDefinitionForm.php
index e58f1f1..917a98b 100644
--- a/src/Form/LibraryDefinitionForm.php
+++ b/src/Form/LibraryDefinitionForm.php
@@ -10,6 +10,7 @@ use Drupal\Core\Form\FormState;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Link;
 use Drupal\Core\Plugin\ContextAwarePluginInterface;
+use Drupal\Core\Plugin\Context\ContextRepositoryInterface;
 use Drupal\Core\Url;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
@@ -34,6 +35,13 @@ class LibraryDefinitionForm extends EntityForm {
    */
   protected $conditionManager;
 
+  /**
+   * The context repository service.
+   *  
+   * @var \Drupal\Core\Plugin\Context\ContextRepositoryInterface
+   */ 
+  protected $contextRepository;
+
   /**
    * Constructs the form object.
    *
@@ -41,10 +49,13 @@ class LibraryDefinitionForm extends EntityForm {
    *   The factory for configuration objects.
    * @param \Drupal\Core\Condition\ConditionManager $condition_manager
    *   Condition manager.
+   * @param \Drupal\Core\Plugin\Context\ContextRepositoryInterface $context_repository
+   *   The lazy context repository service.
    */
-  public function __construct(ConfigFactoryInterface $config_factory, ConditionManager $condition_manager) {
+  public function __construct(ConfigFactoryInterface $config_factory, ConditionManager $condition_manager, ContextRepositoryInterface $context_repository) {
     $this->configFactory = $config_factory;
     $this->conditionManager = $condition_manager;
+    $this->contextRepository = $context_repository;
   }
 
   /**
@@ -53,7 +64,8 @@ class LibraryDefinitionForm extends EntityForm {
   public static function create(ContainerInterface $container) {
     return new static(
       $container->get('config.factory'),
-      $container->get('plugin.manager.condition')
+      $container->get('plugin.manager.condition'),
+      $container->get('context.repository')
     );
   }
 
@@ -63,6 +75,7 @@ class LibraryDefinitionForm extends EntityForm {
   public function form(array $form, FormStateInterface $form_state) {
 
     $settings = $this->configFactory->get('library_manager.settings')->get();
+    $form_state->setTemporaryValue('gathered_contexts', $this->contextRepository->getAvailableContexts());
 
     $form = parent::form($form, $form_state);
 
@@ -396,8 +409,9 @@ class LibraryDefinitionForm extends EntityForm {
     ];
 
     $visibility = $this->entity->getVisibility();
-
-    foreach ($this->conditionManager->getDefinitions() as $condition_id => $definition) {
+    //$conditions = $this->conditionManager->getDefinitions();
+    $conditions = $this->conditionManager->getFilteredDefinitions('library_manager', $form_state->getTemporaryValue('gathered_contexts'), []);
+    foreach ($conditions as $condition_id => $definition) {
 
       /** @var \Drupal\Core\Condition\ConditionInterface $condition */
       $condition = $this->conditionManager->createInstance($condition_id, isset($visibility[$condition_id]) ? $visibility[$condition_id] : []);
