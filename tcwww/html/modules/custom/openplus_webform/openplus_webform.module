<?php

/**
 * @file
 * Provides an example that shows how to create a Webform composite.
 */

module_load_include('inc', 'webform', 'includes/webform.theme.template');

/**
 * Implements hook_theme().
 */
function openplus_webform_theme() {
  return [
    'op_webform_composite_contact' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Prepares variables for webform example composite templates.
 *
 * Default template: op-webform-composite-contact.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 */
function template_preprocess_op_webform_composite_contact(array &$variables) {
  // Here you can get the composite element and alter it.
  _template_preprocess_webform_composite($variables);
}

/**
 * Alter webform elements.
 *
 * @param array $element
 *   The webform element.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 * @param array $context
 *   An associative array containing the following key-value pairs:
 *   - form: The form structure to which elements is being attached.
 *
 * @see \Drupal\webform\WebformSubmissionForm::prepareElements()
 * @see hook_webform_element_ELEMENT_TYPE_alter()
 */
//function openplus_webform_element_address_alter(array &$element, \Drupal\Core\Form\FormStateInterface $form_state, array $context) {
  // Code here acts on all elements included in a webform.
  /** @var \Drupal\webform\WebformSubmissionForm $form_object */
  //$form_object = $form_state->getFormObject();
  // Add custom data attributes to all elements.
  //$element['#attributes']['data-custom'] = '{custom data goes here}';
//}
